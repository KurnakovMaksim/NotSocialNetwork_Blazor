@page "/Publication/Details/{Id:guid}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Publication @Id</h1>

@if (publication != null)
{
    <h3>@nameof(publication.Text)</h3>
    <p>@publication.Text</p>
    <h3>Author name</h3>
    <a href="User/Details/@publication.Author.Id">@publication.Author.Name</a>
    <h3>Author image</h3>
    <img src="../userImages/@publication.Author.Image.Title" style="width:300px;height:300px" />

    <br />
    <a href="Publication/Edit/@publication.Id" class="btn btn-outline-primary">Edit</a>
    <a href="Publication/Delete/@publication.Id" class="btn btn-outline-danger">Delete</a>
    <a href="Publication" class="btn btn-outline-primary">Cancel</a>
}
else
{
    <h1>Loading...</h1>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private PublicationDTO publication;

    protected override async Task OnInitializedAsync() =>
        publication = await GetPublication();

    private async Task<PublicationDTO> GetPublication()
    {
        try
        {
            return await Http.GetFromJsonAsync<PublicationDTO>($"api/AdminPublication/{Id}");
        }
        catch (HttpRequestException)
        {
            NavigationManager.NavigateTo("Publication");
            return null;
        }
    }
}

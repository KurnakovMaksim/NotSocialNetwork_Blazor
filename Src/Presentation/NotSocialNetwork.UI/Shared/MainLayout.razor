@inherits LayoutComponentBase
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<header class="header @_headerDarkClass">
    <div class="header__body">
        <a class="header__ref" href="/" title="Home">
            <div class="blocklogo @_titleDarkClass"></div>
        </a>
    </div>
</header>

<main class="main @_mainDarkClass">
    <div class="main__body">
        <NavMenu DarkThemeCssClass="@_windowDarkClass"
                 SetNightThemeMethod="EditNightTheme" ButtonThemeCssClass="@_buttonDarkClass" />

        <div class="main__content">
            @Body
        </div>
    </div>
</main>

<footer class="footer @_footerDarkClass">
    <div class="footer-body">
        <div class="footer__about">
            <span> Site by Ulyanov Ivan & Kurnakov Maksim. </span>
        </div>
        <RefContainer ReferenceColor="red" ReferencesData="ReferenceData" />
    </div>
</footer>

@code{
    Dictionary<string, string> ReferenceData = new()
    {
        ["https://github.com/Ulyanov-programmer"] = "Ulyanov GitHub",
        ["https://vk.com/h.wilson"] = "Ulyanov VK",
        ["https://github.com/KurnakovMaksim"] = "Kurnakov GitHub",
        ["https://vk.com/makskurnakov2003"] = "Kurnakov VK"
    };

    #region ClassVariables

    string _headerDarkClass = "";
    string _mainDarkClass = "";
    string _footerDarkClass = "";

    string _buttonDarkClass = "";
    string _windowDarkClass = "";
    string _titleDarkClass = "";

    #endregion


    #region RenderingMethods

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var cookieResult = await CookieHelper.GetNightThemeCookies(localStorage);
            SetBackgroundStyles(cookieResult);
        }
    }

    #endregion


    void SetBackgroundStyles(bool cookieOfNightThemeValue)
    {
        if (cookieOfNightThemeValue)
        {
            _headerDarkClass = CssStyles.DarkBackgroundClass;
            _mainDarkClass = CssStyles.DarkBackgroundClass;
            _footerDarkClass = CssStyles.DarkFooterClass;

            _buttonDarkClass = CssStyles.DarkButtonClass;
            _windowDarkClass = CssStyles.DarkWindowClass;
            _titleDarkClass = CssStyles.DarkTitleClass;
        }
        else
        {
            _headerDarkClass = ""; _mainDarkClass = ""; _footerDarkClass = "";
            _titleDarkClass = ""; _windowDarkClass = "";
        }
        StateHasChanged();
    }

    async void EditNightTheme()
    {
        bool newValueOfNightTheme = await CookieHelper.EditNightThemeCookies(localStorage);


        SetBackgroundStyles(newValueOfNightTheme);
    }
}

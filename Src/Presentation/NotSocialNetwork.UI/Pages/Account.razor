@page "/Account"
@inject HttpClient Http
@inject ILocalStorageService localStorage

<link href="/css/Account.css" rel="stylesheet">

<div class="main-contaner-UserInfo">
    <div class="UserInfo-container">
        <div class="UserInfo-nickname">
            <span> Никнейм </span>
        </div>
        <div class="UserInfo-contacts">
            <span> Email </span>
        </div>
        <div class="UserInfo-age">
            Возраст: 200 лет.
        </div>
    </div>
</div>

<Post Posts="posts.ToList()" DarkThemeCssClass="@_postDarkClass" />

@code{
    IEnumerable<PublicationDTO> posts;

    #region ClassVariables

    string _postDarkClass = "";

    #endregion


    #region RenderMethods

    protected async override Task OnInitializedAsync()
    {
        // Do not change the ad logic for the posts variable.
        // otherwise, when the page is rendered, it will be reset to zero.
        posts = new List<PublicationDTO>();

        await GetPostsAsync();
    }

    protected async override void OnAfterRender(bool firstRender)
    {
        bool isNightTheme = await CookieHelper.GetNightThemeCookies(localStorage);

        SetBackgroundStyles(isNightTheme);
    }

    #endregion


    async Task GetPostsAsync()
    {
        posts = await Http.GetFromJsonAsync<IEnumerable<PublicationDTO>>
                ("https://localhost:44353/api/publication/index=0");
    }

    void SetBackgroundStyles(bool cookieOfNightThemeValue)
    {
        if (cookieOfNightThemeValue)
        {
            _postDarkClass = CssStyles.DarkWindowClass;
        }
        else
        {
            _postDarkClass = "";
        }
        StateHasChanged();
    }
}





